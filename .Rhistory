x = "Year",
y = "GdpPerCapita",
color = "Country",
linetype = "Indicator") +
scale_y_continuous(name = "GdpPerCapita",
sec.axis = sec_axis(~.*400, name = "Inflation", breaks = seq(0, 100, by = 20))) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.box = "horizontal",
legend.margin = margin(t = 0, r = 0, b = 0, l = 0),
plot.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.text = element_text(size = 10))
world_bank_data <- world_bank_data %>%
filter(!is.na(Inflation))  # NA değerleri filtrele
ggplot(world_bank_data, aes(x = Year, group = Country)) +
geom_line(aes(y = GdpPerCapita, color = Country, linetype = "GdpPerCapita"), size = 1.2) +
geom_line(aes(y = Inflation*100, color = Country, linetype = "Inflation"), size = 1.2) +
scale_linetype_manual(values = c("GdpPerCapita" = "solid", "Inflation" = "dotted")) +
labs(title = "Inflation and Gdp Per Capita (USD) Comparison",
x = "Year",
y = "GdpPerCapita",
color = "Country",
linetype = "Indicator") +
scale_y_continuous(name = "GdpPerCapita",
sec.axis = sec_axis(~./100, name = "Inflation", breaks = seq(0, 100, by = 20))) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.box = "horizontal",
legend.margin = margin(t = 0, r = 0, b = 0, l = 0),
plot.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.text = element_text(size = 10))
world_bank_data <- world_bank_data %>%
filter(!is.na(Inflation))  # NA değerleri filtrele
ggplot(world_bank_data, aes(x = Year, group = Country)) +
geom_line(aes(y = GdpPerCapita, color = Country, linetype = "GdpPerCapita"), size = 1.2) +
geom_line(aes(y = Inflation*400, color = Country, linetype = "Inflation"), size = 1.2) +
scale_linetype_manual(values = c("GdpPerCapita" = "solid", "Inflation" = "dotted")) +
labs(title = "Inflation and Gdp Per Capita (USD) Comparison",
x = "Year",
y = "GdpPerCapita",
color = "Country",
linetype = "Indicator") +
scale_y_continuous(name = "GdpPerCapita",
sec.axis = sec_axis(~.*400, name = "Inflation", breaks = seq(0, 100, by = 20))) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.box = "horizontal",
legend.margin = margin(t = 0, r = 0, b = 0, l = 0),
plot.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.text = element_text(size = 10))
world_bank_data <- world_bank_data %>%
filter(!is.na(Inflation))  # NA değerleri filtrele
ggplot(world_bank_data, aes(x = Year, group = Country)) +
geom_line(aes(y = GdpPerCapita, color = Country, linetype = "GdpPerCapita"), size = 1.2) +
geom_line(aes(y = Inflation*400, color = Country, linetype = "Inflation"), size = 1.2) +
scale_linetype_manual(values = c("GdpPerCapita" = "solid", "Inflation" = "dotted")) +
labs(title = "Inflation and Gdp Per Capita (USD) Comparison",
x = "Year",
y = "GdpPerCapita",
color = "Country",
linetype = "Indicator") +
scale_y_continuous(name = "GdpPerCapita",
sec.axis = sec_axis(~.*400, name = "Inflation", breaks = seq(0, 400, by = 20))) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.box = "horizontal",
legend.margin = margin(t = 0, r = 0, b = 0, l = 0),
plot.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.text = element_text(size = 10))
world_bank_data <- world_bank_data %>%
filter(!is.na(Inflation))  # NA değerleri filtrele
ggplot(world_bank_data, aes(x = Year, group = Country)) +
geom_line(aes(y = GdpPerCapita, color = Country, linetype = "GdpPerCapita"), size = 1.2) +
geom_line(aes(y = Inflation*100, color = Country, linetype = "Inflation"), size = 1.2) +
scale_linetype_manual(values = c("GdpPerCapita" = "solid", "Inflation" = "dotted")) +
labs(title = "Inflation and Gdp Per Capita (USD) Comparison",
x = "Year",
y = "GdpPerCapita",
color = "Country",
linetype = "Indicator") +
scale_y_continuous(name = "GdpPerCapita",
sec.axis = sec_axis(~./100, name = "Inflation", breaks = seq(0, 100, by = 20))) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.box = "horizontal",
legend.margin = margin(t = 0, r = 0, b = 0, l = 0),
plot.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.text = element_text(size = 10))
world_bank_data <- world_bank_data %>%
filter(!is.na(Inflation))  # NA değerleri filtrele
ggplot(world_bank_data, aes(x = Year, group = Country)) +
geom_line(aes(y = GdpPerCapita, color = Country, linetype = "GdpPerCapita"), size = 1.2) +
geom_line(aes(y = Inflation*100, color = Country, linetype = "Inflation"), size = 1.2) +
scale_linetype_manual(values = c("GdpPerCapita" = "solid", "Inflation" = "dotted")) +
labs(title = "Inflation and Gdp Per Capita (USD) Comparison",
x = "Year",
y = "GdpPerCapita",
color = "Country",
linetype = "Indicator") +
scale_y_continuous(name = "GdpPerCapita",
sec.axis = sec_axis(~./100, name = "Inflation", breaks = seq(0, 400, by = 20))) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.box = "horizontal",
legend.margin = margin(t = 0, r = 0, b = 0, l = 0),
plot.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.text = element_text(size = 10))
world_bank_data <- world_bank_data %>%
filter(!is.na(Inflation))  # NA değerleri filtrele
ggplot(world_bank_data, aes(x = Year, group = Country)) +
geom_line(aes(y = GdpPerCapita, color = Country, linetype = "GdpPerCapita"), size = 1.2) +
geom_line(aes(y = Inflation*100, color = Country, linetype = "Inflation"), size = 1.2) +
scale_linetype_manual(values = c("GdpPerCapita" = "solid", "Inflation" = "dotted")) +
labs(title = "Inflation and Gdp Per Capita (USD) Comparison",
x = "Year",
y = "GdpPerCapita",
color = "Country",
linetype = "Indicator") +
scale_y_continuous(name = "GdpPerCapita",
sec.axis = sec_axis(~./100, name = "Inflation", breaks = seq(0, 400, by = 100))) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.box = "horizontal",
legend.margin = margin(t = 0, r = 0, b = 0, l = 0),
plot.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.text = element_text(size = 10))
world_bank_data <- world_bank_data %>%
filter(!is.na(Inflation))  # NA değerleri filtrele
ggplot(world_bank_data, aes(x = Year, group = Country)) +
geom_line(aes(y = GdpPerCapita, color = Country, linetype = "GdpPerCapita"), size = 1.2) +
geom_line(aes(y = Inflation*100, color = Country, linetype = "Inflation"), size = 1.2) +
scale_linetype_manual(values = c("GdpPerCapita" = "solid", "Inflation" = "dotted")) +
labs(title = "Inflation and Gdp Per Capita (USD) Comparison",
x = "Year",
y = "GdpPerCapita",
color = "Country",
linetype = "Indicator") +
scale_y_continuous(name = "GdpPerCapita",
sec.axis = sec_axis(~./100, name = "Inflation", breaks = seq(0, 100, by = 20))) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.box = "horizontal",
legend.margin = margin(t = 0, r = 0, b = 0, l = 0),
plot.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.text = element_text(size = 10))
world_bank_data <- world_bank_data %>%
filter(!is.na(Inflation))  # NA değerleri filtrele
ggplot(world_bank_data, aes(x = Year, group = Country)) +
geom_line(aes(y = GdpPerCapita, color = Country, linetype = "GdpPerCapita"), size = 1.2) +
geom_line(aes(y = Inflation*400, color = Country, linetype = "Inflation"), size = 1.2) +
scale_linetype_manual(values = c("GdpPerCapita" = "solid", "Inflation" = "dotted")) +
labs(title = "Inflation and Gdp Per Capita (USD) Comparison",
x = "Year",
y = "GdpPerCapita",
color = "Country",
linetype = "Indicator") +
scale_y_continuous(name = "GdpPerCapita",
sec.axis = sec_axis(~., name = "Inflation", breaks = seq(0, 100, by = 20))) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.box = "horizontal",
legend.margin = margin(t = 0, r = 0, b = 0, l = 0),
plot.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.text = element_text(size = 10))
world_bank_data <- world_bank_data %>%
filter(!is.na(Inflation))  # NA değerleri filtrele
ggplot(world_bank_data, aes(x = Year, group = Country)) +
geom_line(aes(y = GdpPerCapita, color = Country, linetype = "GdpPerCapita"), size = 1.2) +
geom_line(aes(y = Inflation*400, color = Country, linetype = "Inflation"), size = 1.2) +
scale_linetype_manual(values = c("GdpPerCapita" = "solid", "Inflation" = "dotted")) +
labs(title = "Inflation and Gdp Per Capita (USD) Comparison",
x = "Year",
y = "GdpPerCapita",
color = "Country",
linetype = "Indicator") +
scale_y_continuous(name = "GdpPerCapita",
sec.axis = sec_axis(~./100, name = "Inflation", breaks = seq(0, 100, by = 20))) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.box = "horizontal",
legend.margin = margin(t = 0, r = 0, b = 0, l = 0),
plot.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.text = element_text(size = 10))
world_bank_data <- world_bank_data %>%
filter(!is.na(Inflation))  # NA değerleri filtrele
ggplot(world_bank_data, aes(x = Year, group = Country)) +
geom_line(aes(y = GdpPerCapita, color = Country, linetype = "GdpPerCapita"), size = 1.2) +
geom_line(aes(y = Inflation*400, color = Country, linetype = "Inflation"), size = 1.2) +
scale_linetype_manual(values = c("GdpPerCapita" = "solid", "Inflation" = "dotted")) +
labs(title = "Inflation and Gdp Per Capita (USD) Comparison",
x = "Year",
y = "GdpPerCapita",
color = "Country",
linetype = "Indicator") +
scale_y_continuous(name = "GdpPerCapita",
sec.axis = sec_axis(~./400, name = "Inflation", breaks = seq(0, 100, by = 20))) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.box = "horizontal",
legend.margin = margin(t = 0, r = 0, b = 0, l = 0),
plot.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.text = element_text(size = 10))
ggplot(world_bank_data, aes(x = factor(Year), y = Population / 1e6, fill = Country)) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.7) +
geom_text(aes(label = scales::label_number_si(accuracy = 1)(Population)),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3) +
labs(title = "Total Population Comparison",
x = "Year",
y = "Population (Million)",
fill = "Country") +
scale_y_continuous(labels = scales::label_number_si(accuracy = 1)) +
theme_minimal()
ggplot(world_bank_data, aes(x = Year, y = AgeDependancyRatio, color = Country, group = Country)) +
geom_line() +
geom_text(aes(label = paste0(scales::comma(round(AgeDependancyRatio), big.mark = ","), "%")),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3) +
labs(
title = "Age Dependency Ratio Comparison",
x = "Year",
y = "Age Dependency Ratio (%)",
color = "Country"
) +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(40, 60), breaks = seq(40, 60, by = 10))
ggplot(world_bank_data, aes(x = Year, y = Inflation, color = Country, group = Country)) +
geom_line() +
geom_text(aes(label = scales::comma(Inflation, big.mark = ",")),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3) +  # Barların üstüne değerleri yazmak için
labs(
title = "Inflation Rate Comparison",
x = "Year",
y = "Inflation Rate",
color = "Country"
) +
theme_minimal()
#Unemployment Rate
ggplot(world_bank_data, aes(x = Year, y = UnemploymentRate, color = Country)) +
geom_line() +
geom_text(aes(label = paste0(scales::comma(round(UnemploymentRate,2), big.mark = ","), "%")),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3) +
labs(
title = "Unemployment Rate Comparison",
x = "Year",
y = "Unemployment Rate",
color = "Country"
) +
theme_minimal()
#Male Labor Rate
ggplot(world_bank_data, aes(x = Year)) +
geom_line(aes(y = MaleLaborRate, color = Country), na.rm = TRUE) +
labs(title = "Male Labor Rate",
x = "Year",
y = "Male Labor Rate") +
theme_minimal() +
facet_grid(. ~ Country) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme(legend.position="bottom",
panel.spacing.x = unit(1, "lines"))
#Female Labor Rate
ggplot(world_bank_data, aes(x = Year)) +
geom_line(aes(y = FemaleLaborRate, color = Country), na.rm = TRUE) +
labs(title = "Female Labor Rate",
x = "Year",
y = "Female Labor Rate") +
theme_minimal() +
facet_grid(. ~ Country) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme(legend.position="bottom",
panel.spacing.x = unit(1, "lines"))
#Unemployment Rate
ggplot(world_bank_data, aes(x = Year, y = UnemploymentRate, color = Country)) +
geom_line() +
geom_text(aes(label = paste0(scales::comma(round(UnemploymentRate,2), big.mark = ","), "%")),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3) +
labs(
title = "Unemployment Rate Comparison",
x = "Year",
y = "Unemployment Rate",
color = "Country"
) +
theme_minimal() +
theme(
plot.title.position = "plot",
plot.title = element_text(size = rel(0.8))
)
#Unemployment Rate
ggplot(world_bank_data, aes(x = Year, y = UnemploymentRate, color = Country)) +
geom_line() +
geom_text(aes(label = paste0(scales::comma(round(UnemploymentRate,2), big.mark = ","), "%")),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3) +
labs(
title = "Unemployment Rate Comparison",
x = "Year",
y = "Unemployment Rate",
color = "Country"
) +
theme_minimal() +
theme(
plot.title.position = "panel",
plot.title = element_text(size = rel(0.8))
)
#Unemployment Rate
ggplot(world_bank_data, aes(x = Year, y = UnemploymentRate, color = Country)) +
geom_line() +
geom_text(aes(label = paste0(scales::comma(round(UnemploymentRate,2), big.mark = ","), "%")),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3) +
labs(
title = "Unemployment Rate Comparison",
x = "Year",
y = "Unemployment Rate",
color = "Country"
) +
theme(
plot.title.position = "panel"
)
#Unemployment Rate
ggplot(world_bank_data, aes(x = Year, y = UnemploymentRate, color = Country)) +
geom_line() +
geom_text(aes(label = paste0(scales::comma(round(UnemploymentRate,2), big.mark = ","), "%")),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3) +
labs(
title = "Unemployment Rate Comparison",
x = "Year",
y = "Unemployment Rate",
color = "Country"
) +
theme_minimal() +
theme(
plot.title.position = "panel",
plot.title = element_text(size = rel(0.8))
)
#Unemployment Rate
ggplot(world_bank_data, aes(x = Year, y = UnemploymentRate, color = Country)) +
geom_line() +
geom_text(aes(label = paste0(scales::comma(round(UnemploymentRate,2), big.mark = ","), "%")),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3) +
labs(
title = "Unemployment Rate Comparison",
x = "Year",
y = "Unemployment Rate",
color = "Country"
) +
theme_minimal() +
theme(
plot.title.position = "panel",
plot.title = element_text(size = rel(0.9))
)
#Unemployment Rate
ggplot(world_bank_data, aes(x = Year, y = UnemploymentRate, color = Country)) +
geom_line() +
geom_text(aes(label = paste0(scales::comma(round(UnemploymentRate,2), big.mark = ","), "%")),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3) +
labs(
title = "Unemployment Rate Comparison",
x = "Year",
y = "Unemployment Rate",
color = "Country"
) +
theme_minimal()
runApp('AstralProjectionShinyApp')
runApp('AstralProjectionShinyApp')
ggplot(world_bank_data, aes(x = factor(Year), y = Population / 1e6, fill = Country)) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.7) +
geom_text(aes(label = scales::label_number_si(accuracy = 1)(Population)),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3) +
labs(title = "Total Population Comparison",
x = "Year",
y = "Population (Million)",
fill = "Country") +
scale_y_continuous(labels = scales::label_number_si(accuracy = 1)) +
theme_minimal()
ggplot(world_bank_data, aes(x = Year, y = AgeDependancyRatio, color = Country, group = Country)) +
geom_line() +
geom_text(aes(label = paste0(scales::comma(round(AgeDependancyRatio), big.mark = ","), "%")),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3) +
labs(
title = "Age Dependency Ratio Comparison",
x = "Year",
y = "Age Dependency Ratio (%)",
color = "Country"
) +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(40, 60), breaks = seq(40, 60, by = 10))
runApp('AstralProjectionShinyApp')
ggplot(world_bank_data, aes(x = as.factor(Year), y = GdpPerCapita, fill = Country)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "GDP Per Capita and Population Over Years",
x = "Year",
y = "GDP Per Capita") +
facet_wrap(~Country, scales = "free_y") +
theme_minimal()
ggplot(world_bank_data, aes(x = factor(Year), y = c(Population / 1e6,GdpPerCapita/ 1e6), fill = Country)) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.7) +
geom_text(aes(label = scales::label_number_si(accuracy = 1)(Population)),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3) +
labs(title = "Total Population Comparison",
x = "Year",
y = "Population (Million)",
fill = "Country") +
scale_y_continuous(labels = scales::label_number_si(accuracy = 1)) +
theme_minimal()
ggplot(world_bank_data, aes(x = factor(Year), fill = Country)) +
geom_bar(aes(y = Population / 1e6), stat = "identity", position = "dodge", alpha = 0.7, color = "black") +
geom_bar(aes(y = GdpPerCapita / 1e6), stat = "identity", position = "dodge", alpha = 0.7, color = "white") +
geom_text(aes(y = Population / 1e6, label = label_number_si()(Population)),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3) +
geom_text(aes(y = GdpPerCapita / 1e6, label = label_number_si()(GdpPerCapita)),
position = position_dodge(width = 0.9),
vjust = 1,
size = 3) +
labs(title = "GDP Per Capita and Population Comparison",
x = "Year",
y = "Values (Million)",
fill = "Country") +
scale_y_continuous(labels = label_number_si()) +
theme_minimal()
ggplot(world_bank_data, aes(x = factor(Year), fill = Country)) +
geom_bar(aes(y = Population / 1e6), stat = "identity", position = "dodge", alpha = 0.7, color = "black") +
geom_bar(aes(y = GdpPerCapita), stat = "identity", position = "dodge", alpha = 0.7, color = "white") +
geom_text(aes(y = Population / 1e6, label = label_number_si()(Population)),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3) +
geom_text(aes(y = GdpPerCapita, label = label_number_si()(GdpPerCapita)),
position = position_dodge(width = 0.9),
vjust = 1,
size = 3) +
labs(title = "GDP Per Capita and Population Comparison",
x = "Year",
y = "Values (Million)",
fill = "Country") +
scale_y_continuous(labels = label_number_si()) +
theme_minimal()
ggplot(world_bank_data, aes(x = factor(Year), fill = Country)) +
geom_bar(aes(y = Population / 1e6), stat = "identity", position = "dodge", alpha = 0.7, color = "black") +
geom_bar(aes(y = GdpPerCapita*100000), stat = "identity", position = "dodge", alpha = 0.7, color = "white") +
geom_text(aes(y = Population / 1e6, label = label_number_si()(Population)),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3) +
geom_text(aes(y = GdpPerCapita*100000, label = label_number_si()(GdpPerCapita)),
position = position_dodge(width = 0.9),
vjust = 1,
size = 3) +
labs(title = "GDP Per Capita and Population Comparison",
x = "Year",
y = "Values (Million)",
fill = "Country") +
scale_y_continuous(labels = label_number_si()) +
theme_minimal()
runApp('AstralProjectionShinyApp')
runApp('AstralProjectionShinyApp')
runApp('AstralProjectionShinyApp')
runApp('AstralProjectionShinyApp')
runApp('AstralProjectionShinyApp')
runApp('AstralProjectionShinyApp')
runApp('AstralProjectionShinyApp')
quarto render_asciidoc()
shiny::runGitHub("pjournal/mef07g-astralprojection", subdir = "AstralProjectionShinyApp", ref = "gh-pages")
shiny::runGitHub("pjournal/mef07g-astralprojection", subdir = "AstralProjection", ref = "gh-pages")
shiny::runGitHub("pjournal//mef07g-astralprojection", subdir = "AstralProjectionShinyApp/app.R", ref = "gh-pages")
shiny::runGitHub(repo = "pjournal/mef07g-astralprojection",subdir="AstralProjectionShinyApp/app.R")
